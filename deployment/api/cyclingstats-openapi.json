{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "CyclingStats API",
    "version": "1.0.0.0"
  },
  "paths": {
    "/users/{userId}/games": {
      "get": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_GetUserGames",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to retrieve games for the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Game list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGamesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/games/{raceId}": {
      "post": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_AddGame",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "raceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGameRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "Not authorized to add a game.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Game favorited."
          }
        }
      },
      "delete": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_RemoveUserGame",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "raceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to remove game.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Rider removed."
          }
        }
      }
    },
    "/users/{userId}/games/{gameId}/teams": {
      "get": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_GetUserGameTeams",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to retrieve teams for the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Game teams list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGameTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/games/{raceId}/teams": {
      "post": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_AddGameTeam",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "raceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGameTeamRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "Not authorized to add a game team.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Game team added."
          }
        }
      }
    },
    "/users/{userId}/games/{raceId}/teams/{teamId}": {
      "put": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_UpdateGameTeam",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "raceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGameTeamRequest"
              }
            }
          },
          "required": true,
          "x-position": 4
        },
        "responses": {
          "401": {
            "description": "Not authorized to add a game team.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Game team added."
          }
        }
      },
      "delete": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_RemoveUserGameTeam",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "raceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to remove game team.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Rider removed."
          }
        }
      }
    },
    "/users/{userId}/games/{gameId}/startlist": {
      "get": {
        "tags": [
          "UserGames"
        ],
        "operationId": "UserGames_GetGameStartList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to retrieve start list for the game.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Start list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGameStartlistResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUsers",
        "responses": {
          "401": {
            "description": "Not authorized to retrieve users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "User list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_CreateUser",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Not authorized to create a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "User created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to retrieve user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "User details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UpdateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "Not authorized to update a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "User updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/riders": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetFavoriteRiders",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to get the riders.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Riders returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteRiderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/riders/{riderId}": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_AddFavoriteRider",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "riderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavorideRiderRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "Not authorized to favorite riders.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Rider favorited."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_RemoveFavoriteRider",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "riderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to remove favorite riders.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Rider removed."
          }
        }
      }
    },
    "/users/{userId}/watchlist": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUserWatchList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to get the watchlist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Watchlist of the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWatchListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/watchlist/{wcsUserName}": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_AddPlayerToWatch",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "wcsUserName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchPlayerRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "Not authorized to add player to watch list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Player added."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_RemovePlayerToWatch",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "wcsUserName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized to remove player from watchlist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Player removed."
          }
        }
      }
    },
    "/users/{userId}/password/wcs": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_SetWcsPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "Not authorized to set the password of a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Password updated."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserGamesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGame"
            }
          }
        }
      },
      "UserGame": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGameResult"
            }
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UserGameResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateUserGameRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          }
        }
      },
      "UserGameTeamsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGameTeam"
            }
          }
        }
      },
      "UserGameTeam": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "teamId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "lastSaved": {
            "type": "string",
            "format": "date-time"
          },
          "riders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamRider"
            }
          }
        }
      },
      "TeamRider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderId": {
            "type": "string"
          },
          "youth": {
            "type": "boolean"
          },
          "stars": {
            "type": "integer",
            "format": "int32"
          },
          "riderType": {
            "type": "string"
          }
        }
      },
      "CreateUserGameTeamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "riders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamRider"
            }
          }
        }
      },
      "UpdateUserGameTeamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "riders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamRider2"
            }
          }
        }
      },
      "TeamRider2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderId": {
            "type": "string"
          },
          "youth": {
            "type": "boolean"
          },
          "stars": {
            "type": "integer",
            "format": "int32"
          },
          "riderType": {
            "type": "string"
          }
        }
      },
      "UserGameStartlistResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderCount": {
            "type": "integer",
            "format": "int64"
          },
          "starBudget": {
            "type": "integer",
            "format": "int32"
          },
          "riders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRiderRaceInfo"
            }
          }
        }
      },
      "UserRiderRaceInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RiderRaceInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "bookmark": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RiderBookmarkSummary"
                  }
                ]
              },
              "pastRaceResults": {
                "type": "object",
                "nullable": true,
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "lastYearResult": {
                "type": "integer",
                "format": "int32"
              },
              "recommendationScore": {
                "type": "number",
                "format": "double"
              },
              "recommendationScores": {
                "$ref": "#/components/schemas/RecommendationScores"
              }
            }
          }
        ]
      },
      "RiderBookmarkSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderId": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecommendationScores": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "specialityPoints": {
            "type": "number",
            "format": "double"
          },
          "recentRacePoints": {
            "type": "number",
            "format": "double"
          },
          "lastYearPoints": {
            "type": "number",
            "format": "double"
          },
          "overall": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RiderRaceInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rider": {
            "$ref": "#/components/schemas/RiderSummary"
          },
          "profile": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RiderProfile"
              }
            ]
          },
          "youthRider": {
            "type": "boolean"
          },
          "riderType": {
            "type": "string"
          },
          "stars": {
            "type": "integer",
            "format": "int32"
          },
          "starString": {
            "type": "string"
          }
        }
      },
      "RiderSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderId": {
            "type": "string"
          },
          "teamId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pcsId": {
            "type": "string",
            "nullable": true
          },
          "birthYear": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2019": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2020": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2021": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2022": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2023": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2024": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2025": {
            "type": "integer",
            "format": "int32"
          },
          "ranking2026": {
            "type": "integer",
            "format": "int32"
          },
          "detailsCompleted": {
            "type": "boolean"
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RiderStatus"
              }
            ]
          }
        }
      },
      "RiderStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "New",
          "Active",
          "WaitingForDetails",
          "NotFound",
          "Retired",
          "Error"
        ],
        "enum": [
          0,
          1,
          5,
          -4,
          -2,
          -1
        ]
      },
      "RiderProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "gc": {
            "type": "integer",
            "format": "int32"
          },
          "sprinter": {
            "type": "integer",
            "format": "int32"
          },
          "puncheur": {
            "type": "integer",
            "format": "int32"
          },
          "oneDay": {
            "type": "integer",
            "format": "int32"
          },
          "climber": {
            "type": "integer",
            "format": "int32"
          },
          "timeTrialist": {
            "type": "integer",
            "format": "int32"
          },
          "uciRanking": {
            "type": "integer",
            "format": "int32"
          },
          "pcsRanking": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "authenticationProviderId": {
            "type": "string",
            "nullable": true
          },
          "wcsSettings": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WcsUserSettings"
              }
            ]
          }
        }
      },
      "WcsUserSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "wcsUserName": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "authenticationId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "wcsUserName": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "authenticationId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FavoriteRiderResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteRider"
            }
          }
        }
      },
      "FavoriteRider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rider": {
            "$ref": "#/components/schemas/RiderSummary2"
          },
          "comment": {
            "type": "string"
          },
          "favoritedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RiderSummary2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "riderId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "currentRanking": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateFavorideRiderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          }
        }
      },
      "UserWatchListResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "watchlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerWatchListItem"
            }
          }
        }
      },
      "PlayerWatchListItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "playerUserId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "wcsUserName": {
            "type": "string"
          },
          "mainOpponent": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserSummary"
              }
            ]
          }
        }
      },
      "UserSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "wcsUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WatchPlayerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          },
          "mainOpponent": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string"
          },
          "encryptedPassword": {
            "type": "string"
          }
        }
      }
    }
  }
}